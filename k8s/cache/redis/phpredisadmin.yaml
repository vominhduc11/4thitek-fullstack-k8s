apiVersion: v1
kind: ConfigMap
metadata:
  name: phpredisadmin-config
data:
  config.inc.php: |
    <?php
    $config = array(
        'servers' => array(
            array(
                'name'   => 'Redis Server',
                'host'   => 'redis-service',
                'port'   => 6379,
                'filter' => '*',
                'scheme' => 'tcp', // tcp or unix
                'path'   => '', // path to unix socket
            ),
        ),
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpredisadmin
  labels:
    app: phpredisadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpredisadmin
  template:
    metadata:
      labels:
        app: phpredisadmin
    spec:
      containers:
      - name: phpredisadmin
        image: erikdubbelboer/phpredisadmin:v1.17.1
        ports:
        - containerPort: 80
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        env:
        - name: REDIS_1_HOST
          value: "redis-service"
        - name: REDIS_1_PORT
          value: "6379"
        - name: REDIS_1_NAME
          value: "Redis Server"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
        volumeMounts:
        - name: config
          mountPath: /src/includes
      volumes:
      - name: config
        configMap:
          name: phpredisadmin-config
---
apiVersion: v1
kind: Service
metadata:
  name: phpredisadmin-service
  labels:
    app: phpredisadmin
spec:
  selector:
    app: phpredisadmin
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: phpredisadmin-external
  labels:
    app: phpredisadmin
spec:
  selector:
    app: phpredisadmin
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 30083
  type: NodePort