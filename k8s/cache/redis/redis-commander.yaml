apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  labels:
    app: redis-commander
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-commander
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      containers:
      - name: redis-commander
        image: rediscommander/redis-commander:latest
        ports:
        - containerPort: 8081
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        env:
        - name: REDIS_HOSTS
          value: "redis-service:6379"
        - name: REDIS_PASSWORD
          value: "Redis-Secure-2024!"
        - name: HTTP_USER
          value: "admin"
        - name: HTTP_PASSWORD
          value: "admin123"
        - name: PORT
          value: "8081"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-commander-service
  labels:
    app: redis-commander
spec:
  selector:
    app: redis-commander
  ports:
  - name: http
    port: 8081
    targetPort: 8081
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis-commander-external
  labels:
    app: redis-commander
spec:
  selector:
    app: redis-commander
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    nodePort: 30082
  type: NodePort